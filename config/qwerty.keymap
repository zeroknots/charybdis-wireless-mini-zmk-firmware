/* upstream bindings and behaviors */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/* local overlays */

#include "macros.dtsi"
#include "behaviors.dtsi"
#include "combos.dtsi"

/ {
    /* --- KEYMAP CONFIG --- */
    // ╭──────┬──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────┬──────╮
    //    00     01     02     03    04      05        06     07     08     09     10     11
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    12     13     14     15    16      17        18     19     20     21     22     23
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    24     25     26     27    28      29        30     31     32     33     34     35
    // ╰──────┴──────┴──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┴──────┴──────┴──────╯
    //                         36     37     38        39     40
    //                      ╰──────┴──────┴──────╯  ╰──────┴──────╯
    // #define BASE    0
    // #define NUM     1
    // #define NAV     2
    // #define SYM     3
    // #define GAME    4
    // #define EXTRAS  5
    // #define SLOW    6
    // #define SCROLL  7

    combos {
        compatible = "zmk,combos";

        scroll {
            bindings = <&mkp MB3>;
            key-positions = <13 38>;
        };

        spotlight {
            bindings = <&kp RG(SPACE)>;
            key-positions = <37 40>;
        };
    };

    behaviors {
        cmd_plus: cmd_plus {
            compatible = "zmk,behavior-hold-tap";
            label = "CMD_PLUS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <290>;
            flavor = "tap-preferred";
        };

        scroll: scroll {
            compatible = "zmk,behavior-hold-tap";
            label = "SCROLL";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESCAPE      &kp Q    &kp W  &kp E              &kp R              &cmd_plus LG(T) T    &kp Y          &kp U      &kp I      &kp O              &kp P            &kp BACKSLASH
&kp LCTRL       &lt 1 A  &kp S  &kp D              &kp F              &kp G                &kp H          &kp J      &kp K      &cmd_plus RG(L) L  &lt 3 SEMICOLON  &kp SINGLE_QUOTE
&kp LEFT_SHIFT  &kp Z    &kp X  &cmd_plus RG(C) C  &cmd_plus RG(V) V  &kp B                &kp N          &kp M      &kp COMMA  &kp PERIOD         &kp SLASH        &mt RIGHT_GUI SLASH
                                &lt 2 TAB          &kp SPACE          &td_bs               &kp BACKSPACE  &kp ENTER
            >;
        };

        special_chars {
            bindings = <
&trans  &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans            &kp TILDE      &kp GRAVE       &kp ASTERISK   &trans            &trans     &trans
&trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans            &trans         &trans          &kp PLUS       &kp MINUS         &kp PIPE   &trans
&trans  &trans  &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans            &trans         &kp UNDERSCORE  &kp LESS_THAN  &kp GREATER_THAN  &kp EQUAL  &kp RGUI
                        &mkp MB2              &mkp MB1               &scroll 7 MCLK    &kp BACKSPACE  &kp ENTER
            >;
        };

        numbers {
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT     &kp CARET     &kp AMPERSAND  &kp ASTERISK  &trans  &trans  &trans
&trans     &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp N7         &kp N8        &kp N9  &kp N0  &trans
&trans     &trans           &trans        &trans        &trans        &trans          &trans        &trans         &trans        &trans  &trans  &trans
                                          &trans        &trans        &trans          &trans        &trans
            >;
        };

        vim_motions {
            bindings = <
&trans  &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LC(NUMBER_4)  &kp LC(N5)          &none           &trans    &trans        &trans     &trans  &bootloader
&trans  &kp RG(NUMBER_1)  &kp RG(NUMBER_2)  &kp RG(NUMBER_3)  &kp RG(NUMBER_4)  &kp RG(NUMBER_5)    &kp LEFT_ARROW  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans            &none             &trans            &trans            &trans              &trans          &trans    &trans        &none      &trans  &trans
                                            &trans            &trans            &trans              &trans          &trans
            >;
        };
    };
};
